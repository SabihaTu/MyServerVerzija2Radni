//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyServer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EuroplakatEntities2 : DbContext
    {
        public EuroplakatEntities2()
            : base("name=EuroplakatEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<atribut> atribut { get; set; }
        public virtual DbSet<faktura> faktura { get; set; }
        public virtual DbSet<fakturaStavke> fakturaStavke { get; set; }
        public virtual DbSet<klijent> klijent { get; set; }
        public virtual DbSet<klijentVeze> klijentVeze { get; set; }
        public virtual DbSet<link> link { get; set; }
        public virtual DbSet<mrezaPlakat> mrezaPlakat { get; set; }
        public virtual DbSet<plakat> plakat { get; set; }
        public virtual DbSet<plakatSlika> plakatSlika { get; set; }
        public virtual DbSet<ponuda> ponuda { get; set; }
        public virtual DbSet<ponudaKontakt> ponudaKontakt { get; set; }
        public virtual DbSet<ponudaStavkaDodatak> ponudaStavkaDodatak { get; set; }
        public virtual DbSet<ponudaStavke> ponudaStavke { get; set; }
        public virtual DbSet<porukaSistemska> porukaSistemska { get; set; }
        public virtual DbSet<radniNalog> radniNalog { get; set; }
        public virtual DbSet<radniNalogSlika> radniNalogSlika { get; set; }
        public virtual DbSet<radniNalogStavke> radniNalogStavke { get; set; }
        public virtual DbSet<trosak> trosak { get; set; }
        public virtual DbSet<turaSedmica> turaSedmica { get; set; }
        public virtual DbSet<turaSedmicaZaposleni> turaSedmicaZaposleni { get; set; }
        public virtual DbSet<ugovor> ugovor { get; set; }
        public virtual DbSet<ugovorStavke> ugovorStavke { get; set; }
        public virtual DbSet<zaposleni> zaposleni { get; set; }
        public virtual DbSet<plakatLog> plakatLog { get; set; }
        public virtual DbSet<ponudaLog> ponudaLog { get; set; }
        public virtual DbSet<ponudaStavkeLog> ponudaStavkeLog { get; set; }
        public virtual DbSet<radniNalogStavkeLog> radniNalogStavkeLog { get; set; }
        public virtual DbSet<ugovorLog> ugovorLog { get; set; }
        public virtual DbSet<ugovorStavkeLog> ugovorStavkeLog { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int checkPoslanePonude()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("checkPoslanePonude");
        }
    
        public virtual int createFaktura(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createFaktura", ponudaIdParameter);
        }
    
        public virtual int demontirajPlakat(Nullable<int> radniNalogStavke, Nullable<int> logovaniId)
        {
            var radniNalogStavkeParameter = radniNalogStavke.HasValue ?
                new ObjectParameter("radniNalogStavke", radniNalogStavke) :
                new ObjectParameter("radniNalogStavke", typeof(int));
    
            var logovaniIdParameter = logovaniId.HasValue ?
                new ObjectParameter("logovaniId", logovaniId) :
                new ObjectParameter("logovaniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("demontirajPlakat", radniNalogStavkeParameter, logovaniIdParameter);
        }
    
        public virtual ObjectResult<getLokacijeZauzetost_Result> getLokacijeZauzetost(Nullable<System.DateTime> pocetak, Nullable<int> trajanje, Nullable<int> plakatTipId)
        {
            var pocetakParameter = pocetak.HasValue ?
                new ObjectParameter("pocetak", pocetak) :
                new ObjectParameter("pocetak", typeof(System.DateTime));
    
            var trajanjeParameter = trajanje.HasValue ?
                new ObjectParameter("trajanje", trajanje) :
                new ObjectParameter("trajanje", typeof(int));
    
            var plakatTipIdParameter = plakatTipId.HasValue ?
                new ObjectParameter("plakatTipId", plakatTipId) :
                new ObjectParameter("plakatTipId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLokacijeZauzetost_Result>("getLokacijeZauzetost", pocetakParameter, trajanjeParameter, plakatTipIdParameter);
        }
    
        public virtual ObjectResult<getMrezaPlakati_Result> getMrezaPlakati(Nullable<int> mrezaId)
        {
            var mrezaIdParameter = mrezaId.HasValue ?
                new ObjectParameter("mrezaId", mrezaId) :
                new ObjectParameter("mrezaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMrezaPlakati_Result>("getMrezaPlakati", mrezaIdParameter);
        }
    
        public virtual ObjectResult<getMrezaSlike_Result> getMrezaSlike(Nullable<int> mrezaId)
        {
            var mrezaIdParameter = mrezaId.HasValue ?
                new ObjectParameter("mrezaId", mrezaId) :
                new ObjectParameter("mrezaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMrezaSlike_Result>("getMrezaSlike", mrezaIdParameter);
        }
    
        public virtual ObjectResult<getMrezeDTOByPonuda_Result> getMrezeDTOByPonuda(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMrezeDTOByPonuda_Result>("getMrezeDTOByPonuda", ponudaIdParameter);
        }
    
        public virtual int getNalogStavlaJSON(Nullable<int> zaposleniId)
        {
            var zaposleniIdParameter = zaposleniId.HasValue ?
                new ObjectParameter("zaposleniId", zaposleniId) :
                new ObjectParameter("zaposleniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getNalogStavlaJSON", zaposleniIdParameter);
        }
    
        public virtual ObjectResult<getNalogStavlaJSONSabiha_Result> getNalogStavlaJSONSabiha(string zaposleni)
        {
            var zaposleniParameter = zaposleni != null ?
                new ObjectParameter("zaposleni", zaposleni) :
                new ObjectParameter("zaposleni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNalogStavlaJSONSabiha_Result>("getNalogStavlaJSONSabiha", zaposleniParameter);
        }
    
        public virtual ObjectResult<getPlakatiDTOByPonuda_Result> getPlakatiDTOByPonuda(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPlakatiDTOByPonuda_Result>("getPlakatiDTOByPonuda", ponudaIdParameter);
        }
    
        public virtual ObjectResult<getPlakatiDTOByUgovor_Result> getPlakatiDTOByUgovor(Nullable<int> ugovorId)
        {
            var ugovorIdParameter = ugovorId.HasValue ?
                new ObjectParameter("ugovorId", ugovorId) :
                new ObjectParameter("ugovorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPlakatiDTOByUgovor_Result>("getPlakatiDTOByUgovor", ugovorIdParameter);
        }
    
        public virtual ObjectResult<getPlakatiRegijaTipPeriod_Result> getPlakatiRegijaTipPeriod(Nullable<int> regijaId, Nullable<int> plakatTipId, Nullable<System.DateTime> pocetak, Nullable<System.DateTime> kraj)
        {
            var regijaIdParameter = regijaId.HasValue ?
                new ObjectParameter("regijaId", regijaId) :
                new ObjectParameter("regijaId", typeof(int));
    
            var plakatTipIdParameter = plakatTipId.HasValue ?
                new ObjectParameter("plakatTipId", plakatTipId) :
                new ObjectParameter("plakatTipId", typeof(int));
    
            var pocetakParameter = pocetak.HasValue ?
                new ObjectParameter("pocetak", pocetak) :
                new ObjectParameter("pocetak", typeof(System.DateTime));
    
            var krajParameter = kraj.HasValue ?
                new ObjectParameter("kraj", kraj) :
                new ObjectParameter("kraj", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPlakatiRegijaTipPeriod_Result>("getPlakatiRegijaTipPeriod", regijaIdParameter, plakatTipIdParameter, pocetakParameter, krajParameter);
        }
    
        public virtual ObjectResult<getPlakatiZauzetost_Result> getPlakatiZauzetost(Nullable<System.DateTime> pocetak, Nullable<int> trajanje)
        {
            var pocetakParameter = pocetak.HasValue ?
                new ObjectParameter("pocetak", pocetak) :
                new ObjectParameter("pocetak", typeof(System.DateTime));
    
            var trajanjeParameter = trajanje.HasValue ?
                new ObjectParameter("trajanje", trajanje) :
                new ObjectParameter("trajanje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPlakatiZauzetost_Result>("getPlakatiZauzetost", pocetakParameter, trajanjeParameter);
        }
    
        public virtual int getPonudaPaged(Nullable<int> pageNo, Nullable<int> pageSize, Nullable<System.DateTime> filterDatumPonude, Nullable<int> filterPonudaStatusId, string filterKlijent, string filterKampanja, Nullable<int> filterPlakatTipId, string filterProtokol, Nullable<System.DateTime> filterPocetak, Nullable<System.DateTime> filterKraj, Nullable<int> sortPolje, Nullable<bool> isMreza, ObjectParameter brojSlogova)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var filterDatumPonudeParameter = filterDatumPonude.HasValue ?
                new ObjectParameter("filterDatumPonude", filterDatumPonude) :
                new ObjectParameter("filterDatumPonude", typeof(System.DateTime));
    
            var filterPonudaStatusIdParameter = filterPonudaStatusId.HasValue ?
                new ObjectParameter("filterPonudaStatusId", filterPonudaStatusId) :
                new ObjectParameter("filterPonudaStatusId", typeof(int));
    
            var filterKlijentParameter = filterKlijent != null ?
                new ObjectParameter("filterKlijent", filterKlijent) :
                new ObjectParameter("filterKlijent", typeof(string));
    
            var filterKampanjaParameter = filterKampanja != null ?
                new ObjectParameter("filterKampanja", filterKampanja) :
                new ObjectParameter("filterKampanja", typeof(string));
    
            var filterPlakatTipIdParameter = filterPlakatTipId.HasValue ?
                new ObjectParameter("filterPlakatTipId", filterPlakatTipId) :
                new ObjectParameter("filterPlakatTipId", typeof(int));
    
            var filterProtokolParameter = filterProtokol != null ?
                new ObjectParameter("filterProtokol", filterProtokol) :
                new ObjectParameter("filterProtokol", typeof(string));
    
            var filterPocetakParameter = filterPocetak.HasValue ?
                new ObjectParameter("filterPocetak", filterPocetak) :
                new ObjectParameter("filterPocetak", typeof(System.DateTime));
    
            var filterKrajParameter = filterKraj.HasValue ?
                new ObjectParameter("filterKraj", filterKraj) :
                new ObjectParameter("filterKraj", typeof(System.DateTime));
    
            var sortPoljeParameter = sortPolje.HasValue ?
                new ObjectParameter("sortPolje", sortPolje) :
                new ObjectParameter("sortPolje", typeof(int));
    
            var isMrezaParameter = isMreza.HasValue ?
                new ObjectParameter("isMreza", isMreza) :
                new ObjectParameter("isMreza", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getPonudaPaged", pageNoParameter, pageSizeParameter, filterDatumPonudeParameter, filterPonudaStatusIdParameter, filterKlijentParameter, filterKampanjaParameter, filterPlakatTipIdParameter, filterProtokolParameter, filterPocetakParameter, filterKrajParameter, sortPoljeParameter, isMrezaParameter, brojSlogova);
        }
    
        public virtual ObjectResult<getPonudaSlike_Result> getPonudaSlike(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPonudaSlike_Result>("getPonudaSlike", ponudaIdParameter);
        }
    
        public virtual ObjectResult<getPonudaSlike1_Result> getPonudaSlike1(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPonudaSlike1_Result>("getPonudaSlike1", ponudaIdParameter);
        }
    
        public virtual int getPrihvacenaPonudaPaged(Nullable<int> pageNo, Nullable<int> pageSize, Nullable<System.DateTime> filterPocetak, Nullable<System.DateTime> filterDatumPonude, string filterKlijent, string filterKampanja, Nullable<int> filterPlakatTipId, string filterProtokol, ObjectParameter brojSlogova)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var filterPocetakParameter = filterPocetak.HasValue ?
                new ObjectParameter("filterPocetak", filterPocetak) :
                new ObjectParameter("filterPocetak", typeof(System.DateTime));
    
            var filterDatumPonudeParameter = filterDatumPonude.HasValue ?
                new ObjectParameter("filterDatumPonude", filterDatumPonude) :
                new ObjectParameter("filterDatumPonude", typeof(System.DateTime));
    
            var filterKlijentParameter = filterKlijent != null ?
                new ObjectParameter("filterKlijent", filterKlijent) :
                new ObjectParameter("filterKlijent", typeof(string));
    
            var filterKampanjaParameter = filterKampanja != null ?
                new ObjectParameter("filterKampanja", filterKampanja) :
                new ObjectParameter("filterKampanja", typeof(string));
    
            var filterPlakatTipIdParameter = filterPlakatTipId.HasValue ?
                new ObjectParameter("filterPlakatTipId", filterPlakatTipId) :
                new ObjectParameter("filterPlakatTipId", typeof(int));
    
            var filterProtokolParameter = filterProtokol != null ?
                new ObjectParameter("filterProtokol", filterProtokol) :
                new ObjectParameter("filterProtokol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getPrihvacenaPonudaPaged", pageNoParameter, pageSizeParameter, filterPocetakParameter, filterDatumPonudeParameter, filterKlijentParameter, filterKampanjaParameter, filterPlakatTipIdParameter, filterProtokolParameter, brojSlogova);
        }
    
        public virtual ObjectResult<getRadneNaloge_Result> getRadneNaloge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRadneNaloge_Result>("getRadneNaloge");
        }
    
        public virtual int getRadneNalogePaged(Nullable<int> pageNo, Nullable<int> pageSize, ObjectParameter brojSlogova)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getRadneNalogePaged", pageNoParameter, pageSizeParameter, brojSlogova);
        }
    
        public virtual ObjectResult<getRadniNalogSlike_Result> getRadniNalogSlike(Nullable<int> radniNalogId)
        {
            var radniNalogIdParameter = radniNalogId.HasValue ?
                new ObjectParameter("radniNalogId", radniNalogId) :
                new ObjectParameter("radniNalogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRadniNalogSlike_Result>("getRadniNalogSlike", radniNalogIdParameter);
        }
    
        public virtual int getRadniNalogStavkeDemontaza()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getRadniNalogStavkeDemontaza");
        }
    
        public virtual int getRadniNalogStavkeIdejno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getRadniNalogStavkeIdejno");
        }
    
        public virtual int getRadniNalogStavkePaged(Nullable<int> pageNo, Nullable<int> pageSize, ObjectParameter brojSlogova)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getRadniNalogStavkePaged", pageNoParameter, pageSizeParameter, brojSlogova);
        }
    
        public virtual ObjectResult<getSedmice_Result> getSedmice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSedmice_Result>("getSedmice");
        }
    
        public virtual ObjectResult<getSlikePonuda_Result> getSlikePonuda(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSlikePonuda_Result>("getSlikePonuda", ponudaIdParameter);
        }
    
        public virtual ObjectResult<getSlobodnePlakate_Result> getSlobodnePlakate(Nullable<int> plakatId)
        {
            var plakatIdParameter = plakatId.HasValue ?
                new ObjectParameter("plakatId", plakatId) :
                new ObjectParameter("plakatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSlobodnePlakate_Result>("getSlobodnePlakate", plakatIdParameter);
        }
    
        public virtual ObjectResult<getStavkeRN_Result> getStavkeRN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStavkeRN_Result>("getStavkeRN");
        }
    
        public virtual ObjectResult<getStorniranePonude_Result> getStorniranePonude()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStorniranePonude_Result>("getStorniranePonude");
        }
    
        public virtual ObjectResult<getTrosakDTOByPonuda_Result> getTrosakDTOByPonuda(Nullable<int> ponudaId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTrosakDTOByPonuda_Result>("getTrosakDTOByPonuda", ponudaIdParameter);
        }
    
        public virtual ObjectResult<getTuraDvijeSedmice_Result> getTuraDvijeSedmice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTuraDvijeSedmice_Result>("getTuraDvijeSedmice");
        }
    
        public virtual ObjectResult<getTure_Result> getTure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTure_Result>("getTure");
        }
    
        public virtual int geTureJSON(string zaposleni)
        {
            var zaposleniParameter = zaposleni != null ?
                new ObjectParameter("zaposleni", zaposleni) :
                new ObjectParameter("zaposleni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("geTureJSON", zaposleniParameter);
        }
    
        public virtual ObjectResult<geTureJSONSabiha_Result> geTureJSONSabiha(string zaposleni)
        {
            var zaposleniParameter = zaposleni != null ?
                new ObjectParameter("zaposleni", zaposleni) :
                new ObjectParameter("zaposleni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<geTureJSONSabiha_Result>("geTureJSONSabiha", zaposleniParameter);
        }
    
        public virtual ObjectResult<string> getZaposleniEmail(Nullable<int> zaposleniId)
        {
            var zaposleniIdParameter = zaposleniId.HasValue ?
                new ObjectParameter("zaposleniId", zaposleniId) :
                new ObjectParameter("zaposleniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getZaposleniEmail", zaposleniIdParameter);
        }
    
        public virtual int insertPosaljiPonudu(Nullable<int> accountZaposleniId, Nullable<int> logovaniZaposleniId, Nullable<int> ponudaId, Nullable<int> radniNalogId, string putanjaUvjeti, ObjectParameter porukaSistemskaLId, ObjectParameter porukaSistemskaAId)
        {
            var accountZaposleniIdParameter = accountZaposleniId.HasValue ?
                new ObjectParameter("accountZaposleniId", accountZaposleniId) :
                new ObjectParameter("accountZaposleniId", typeof(int));
    
            var logovaniZaposleniIdParameter = logovaniZaposleniId.HasValue ?
                new ObjectParameter("logovaniZaposleniId", logovaniZaposleniId) :
                new ObjectParameter("logovaniZaposleniId", typeof(int));
    
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var radniNalogIdParameter = radniNalogId.HasValue ?
                new ObjectParameter("radniNalogId", radniNalogId) :
                new ObjectParameter("radniNalogId", typeof(int));
    
            var putanjaUvjetiParameter = putanjaUvjeti != null ?
                new ObjectParameter("putanjaUvjeti", putanjaUvjeti) :
                new ObjectParameter("putanjaUvjeti", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPosaljiPonudu", accountZaposleniIdParameter, logovaniZaposleniIdParameter, ponudaIdParameter, radniNalogIdParameter, putanjaUvjetiParameter, porukaSistemskaLId, porukaSistemskaAId);
        }
    
        public virtual int insertPosaljiRadniNalog(Nullable<int> accountZaposleniId, Nullable<int> logovaniZaposleniId, Nullable<int> ponudaId, Nullable<int> radniNalogId, string putanjaUvjeti, ObjectParameter porukaSistemskaLId, ObjectParameter porukaSistemskaAId)
        {
            var accountZaposleniIdParameter = accountZaposleniId.HasValue ?
                new ObjectParameter("accountZaposleniId", accountZaposleniId) :
                new ObjectParameter("accountZaposleniId", typeof(int));
    
            var logovaniZaposleniIdParameter = logovaniZaposleniId.HasValue ?
                new ObjectParameter("logovaniZaposleniId", logovaniZaposleniId) :
                new ObjectParameter("logovaniZaposleniId", typeof(int));
    
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var radniNalogIdParameter = radniNalogId.HasValue ?
                new ObjectParameter("radniNalogId", radniNalogId) :
                new ObjectParameter("radniNalogId", typeof(int));
    
            var putanjaUvjetiParameter = putanjaUvjeti != null ?
                new ObjectParameter("putanjaUvjeti", putanjaUvjeti) :
                new ObjectParameter("putanjaUvjeti", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPosaljiRadniNalog", accountZaposleniIdParameter, logovaniZaposleniIdParameter, ponudaIdParameter, radniNalogIdParameter, putanjaUvjetiParameter, porukaSistemskaLId, porukaSistemskaAId);
        }
    
        public virtual int isPlakatZauzet(Nullable<int> plakatId, Nullable<System.DateTime> datumOd, Nullable<System.DateTime> datumDo, ObjectParameter rezultat)
        {
            var plakatIdParameter = plakatId.HasValue ?
                new ObjectParameter("plakatId", plakatId) :
                new ObjectParameter("plakatId", typeof(int));
    
            var datumOdParameter = datumOd.HasValue ?
                new ObjectParameter("datumOd", datumOd) :
                new ObjectParameter("datumOd", typeof(System.DateTime));
    
            var datumDoParameter = datumDo.HasValue ?
                new ObjectParameter("datumDo", datumDo) :
                new ObjectParameter("datumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("isPlakatZauzet", plakatIdParameter, datumOdParameter, datumDoParameter, rezultat);
        }
    
        public virtual ObjectResult<isValidLink_Result> isValidLink(Nullable<int> ponudaId, string link)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isValidLink_Result>("isValidLink", ponudaIdParameter, linkParameter);
        }
    
        public virtual ObjectResult<isValidLinkRN_Result> isValidLinkRN(Nullable<int> radniNalogId, string link)
        {
            var radniNalogIdParameter = radniNalogId.HasValue ?
                new ObjectParameter("radniNalogId", radniNalogId) :
                new ObjectParameter("radniNalogId", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isValidLinkRN_Result>("isValidLinkRN", radniNalogIdParameter, linkParameter);
        }
    
        public virtual int IsZauzetaMreza(Nullable<int> plakatId, Nullable<int> mrezaId, Nullable<System.DateTime> datumOd, Nullable<System.DateTime> datumDo, ObjectParameter rezultat)
        {
            var plakatIdParameter = plakatId.HasValue ?
                new ObjectParameter("plakatId", plakatId) :
                new ObjectParameter("plakatId", typeof(int));
    
            var mrezaIdParameter = mrezaId.HasValue ?
                new ObjectParameter("mrezaId", mrezaId) :
                new ObjectParameter("mrezaId", typeof(int));
    
            var datumOdParameter = datumOd.HasValue ?
                new ObjectParameter("datumOd", datumOd) :
                new ObjectParameter("datumOd", typeof(System.DateTime));
    
            var datumDoParameter = datumDo.HasValue ?
                new ObjectParameter("datumDo", datumDo) :
                new ObjectParameter("datumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IsZauzetaMreza", plakatIdParameter, mrezaIdParameter, datumOdParameter, datumDoParameter, rezultat);
        }
    
        public virtual int odbijPonudu(Nullable<int> ponudaId, Nullable<int> logovaniId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var logovaniIdParameter = logovaniId.HasValue ?
                new ObjectParameter("logovaniId", logovaniId) :
                new ObjectParameter("logovaniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("odbijPonudu", ponudaIdParameter, logovaniIdParameter);
        }
    
        public virtual int prihvatiPonudu(Nullable<int> ponudaId, Nullable<int> logovaniId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var logovaniIdParameter = logovaniId.HasValue ?
                new ObjectParameter("logovaniId", logovaniId) :
                new ObjectParameter("logovaniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prihvatiPonudu", ponudaIdParameter, logovaniIdParameter);
        }
    
        public virtual int realizujPonudu(Nullable<int> radniNalogStavkaId)
        {
            var radniNalogStavkaIdParameter = radniNalogStavkaId.HasValue ?
                new ObjectParameter("radniNalogStavkaId", radniNalogStavkaId) :
                new ObjectParameter("radniNalogStavkaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("realizujPonudu", radniNalogStavkaIdParameter);
        }
    
        public virtual int stornirajPonudu(Nullable<int> ponudaId, Nullable<int> logovaniId)
        {
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var logovaniIdParameter = logovaniId.HasValue ?
                new ObjectParameter("logovaniId", logovaniId) :
                new ObjectParameter("logovaniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stornirajPonudu", ponudaIdParameter, logovaniIdParameter);
        }
    
        public virtual int updateIsRanije()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateIsRanije");
        }
    
        public virtual int updatePorukaSistemska(Nullable<int> porukaSistemskaLId, Nullable<int> porukaSistemskaAId, Nullable<int> ponudaId, string putanja)
        {
            var porukaSistemskaLIdParameter = porukaSistemskaLId.HasValue ?
                new ObjectParameter("porukaSistemskaLId", porukaSistemskaLId) :
                new ObjectParameter("porukaSistemskaLId", typeof(int));
    
            var porukaSistemskaAIdParameter = porukaSistemskaAId.HasValue ?
                new ObjectParameter("porukaSistemskaAId", porukaSistemskaAId) :
                new ObjectParameter("porukaSistemskaAId", typeof(int));
    
            var ponudaIdParameter = ponudaId.HasValue ?
                new ObjectParameter("ponudaId", ponudaId) :
                new ObjectParameter("ponudaId", typeof(int));
    
            var putanjaParameter = putanja != null ?
                new ObjectParameter("putanja", putanja) :
                new ObjectParameter("putanja", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePorukaSistemska", porukaSistemskaLIdParameter, porukaSistemskaAIdParameter, ponudaIdParameter, putanjaParameter);
        }
    }
}
